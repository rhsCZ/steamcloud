name: Build & Release Steamcloud

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest

    env:
      BRANCH: ${{ github.event_name == 'release' && github.event.release.target_commitish || github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build Win32 (x86)
        run: msbuild steamcloud.sln /p:Configuration=Release /p:Platform=x86

      - name: Build x64
        run: msbuild steamcloud.sln /p:Configuration=Release /p:Platform=x64

      - name: Pack x86 to RAR
        shell: cmd
        run: '"./utils/rar.exe" a -ep steamcloud-x86.rar "output\Win32\Release\steamcloud.exe"'

      - name: Pack x64 to RAR
        shell: cmd
        run: '"./utils/rar.exe" a -ep steamcloud-x64.rar "output\x64\Release\steamcloud.exe"'

      # Upload steamcloud.exe vždy
      - name: Upload x86 steamcloud.exe to VirusTotal
        if: github.event_name == 'release'
        id: vt_x86_cloud
        run: |
          $response = Invoke-RestMethod -Uri "https://www.virustotal.com/api/v3/files" `
            -Method Post `
            -Headers @{ "X-Apikey" = "${{ secrets.VT_API_KEY }}" } `
            -Form @{ file = Get-Item "output\Win32\Release\steamcloud.exe" }
          echo "analysis_url=https://www.virustotal.com/gui/file-analysis/$($response.data.id)" >> $env:GITHUB_OUTPUT

      - name: Upload x64 steamcloud.exe to VirusTotal
        if: github.event_name == 'release'
        id: vt_x64_cloud
        run: |
          $response = Invoke-RestMethod -Uri "https://www.virustotal.com/api/v3/files" `
            -Method Post `
            -Headers @{ "X-Apikey" = "${{ secrets.VT_API_KEY }}" } `
            -Form @{ file = Get-Item "output\x64\Release\steamcloud.exe" }
          echo "analysis_url=https://www.virustotal.com/gui/file-analysis/$($response.data.id)" >> $env:GITHUB_OUTPUT

      # Upload steam-worker.exe jen pokud není master
      - name: Upload x86 steam-worker.exe to VirusTotal (skip on master)
        if: env.BRANCH != 'master' && github.event_name == 'release'
        id: vt_x86_worker
        run: |
          $response = Invoke-RestMethod -Uri "https://www.virustotal.com/api/v3/files" `
            -Method Post `
            -Headers @{ "X-Apikey" = "${{ secrets.VT_API_KEY }}" } `
            -Form @{ file = Get-Item "output\Win32\Release\steam-worker.exe" }
          echo "analysis_url=https://www.virustotal.com/gui/file-analysis/$($response.data.id)" >> $env:GITHUB_OUTPUT

      - name: Upload x64 steam-worker.exe to VirusTotal (skip on master)
        if: env.BRANCH != 'master' && github.event_name == 'release'
        id: vt_x64_worker
        run: |
          $response = Invoke-RestMethod -Uri "https://www.virustotal.com/api/v3/files" `
            -Method Post `
            -Headers @{ "X-Apikey" = "${{ secrets.VT_API_KEY }}" } `
            -Form @{ file = Get-Item "output\x64\Release\steam-worker.exe" }
          echo "analysis_url=https://www.virustotal.com/gui/file-analysis/$($response.data.id)" >> $env:GITHUB_OUTPUT

      # Připojení odkazů do release poznámky - jen pokud je release event
      - name: Append VirusTotal links to release body
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VT_X86_CLOUD: ${{ steps.vt_x86_cloud.outputs.analysis_url }}
          VT_X64_CLOUD: ${{ steps.vt_x64_cloud.outputs.analysis_url }}
          VT_X86_WORKER: ${{ steps.vt_x86_worker.outputs.analysis_url }}
          VT_X64_WORKER: ${{ steps.vt_x64_worker.outputs.analysis_url }}
        run: |
          $branch = '${{ env.BRANCH }}'
      
          # základní odkazy vždy
          $vtLinks  = "- [x86 steamcloud.exe]($env:VT_X86_CLOUD)`n"
          $vtLinks += "- [x64 steamcloud.exe]($env:VT_X64_CLOUD)`n"
      
          # worker jen mimo master
          if ($branch -ne 'master') {
            $vtLinks += "- [x86 steam-worker.exe]($env:VT_X86_WORKER)`n"
            $vtLinks += "- [x64 steam-worker.exe]($env:VT_X64_WORKER)`n"
          }
      
          $releaseUrl = '${{ github.event.release.url }}'
          $token      = $env:GITHUB_TOKEN
      
          $release = Invoke-RestMethod -Method Get -Uri $releaseUrl -Headers @{Authorization = "Bearer $token"}
          $newBody = "$($release.body)`n`n$vtLinks"
      
          Invoke-RestMethod -Method Patch -Uri $releaseUrl `
            -Headers @{Authorization = "Bearer $token"; 'Content-Type' = 'application/json'} `
            -Body (@{body = $newBody} | ConvertTo-Json)


      - name: Upload artifact (manual run only)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: steamcloud-builds
          path: |
            steamcloud-x86.rar
            steamcloud-x64.rar

      - name: Upload to GitHub Release (release trigger only)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            steamcloud-x86.rar
            steamcloud-x64.rar
